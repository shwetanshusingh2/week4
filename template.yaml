AWSTemplateFormatVersion: "2010-09-09"
Resources:
  Database:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: "dbcrawler123"
  Crawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: "CSVCrawler123"
      Role: !Ref RoleGlue
      DatabaseName: !Ref Database
      Targets:
        S3Targets:
          - Path: "s3://shwet23/csv"
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
  RoleGlue:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:*
                  - glue:Get*
                  - logs:*
                  - glue:CreateTable
                  - glue:UpdateTable
                Resource: "*"
  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "EventRule"
      EventPattern:
        source:
          - "aws.glue"
        detail-type:
          -  "Glue Crawler State Change"
        detail:
          crawlerName:
            - "CSVCrawler123"
          state:
            -  "Succeeded"
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "LambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: "LambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "EventRule"
          - "Arn"

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyName: S3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - glue:Get*
                  - glue:StartCrawler
                  - lambda:PublishVersion
                  - ses:SendEmail
                  - ses:SendRawEmail
                Resource: "*"
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: 'data-shwet'
        S3Key: 'lambda_trigger.zip'
      Handler: lambda_trigger.handler
      Runtime: python3.7
      Role: !GetAtt LambdaRole.Arn

